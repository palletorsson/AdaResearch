[gd_scene load_steps=5 format=3 uid="uid://bqxvhxqxqxqxr"]

[ext_resource type="Script" uid="uid://cio66uotrkc77" path="res://algorithms/MachineLearning/convolutional_neural_networks_CNNs/ConvolutionalNeuralNetworksCNNs.gd" id="1_script"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_1"]
albedo_color = Color(0.2, 0.2, 0.2, 1)
metallic = 0.8
roughness = 0.2

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_2"]
albedo_color = Color(0.2, 0.8, 0.2, 1)
emission_enabled = true
emission = Color(0.2, 0.8, 0.2, 1)
emission_energy_multiplier = 0.3

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_3"]
albedo_color = Color(0.8, 0.2, 0.2, 1)
emission_enabled = true
emission = Color(0.8, 0.2, 0.2, 1)
emission_energy_multiplier = 0.3

[node name="ConvolutionalNeuralNetworksCNNs" type="Node3D"]
script = ExtResource("1_script")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.707107, 0.707107, 0, -0.707107, 0.707107, 0, 15, 15)

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.707107, -0.5, 0.5, 0, 0.707107, 0.707107, -0.707107, -0.5, 0.5, 0, 20, 0)
light_energy = 1.5

[node name="InputImage" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -12, 0, 0)

[node name="ImageGrid" type="Node3D" parent="InputImage"]

[node name="ImageLabel" type="CSGBox3D" parent="InputImage"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0)
material_override = SubResource("StandardMaterial3D_1")
size = Vector3(0.5, 0.5, 0.5)

[node name="ConvolutionalLayers" type="Node3D" parent="."]

[node name="ConvLayer1" type="Node3D" parent="ConvolutionalLayers"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -6, 0, 0)

[node name="Conv1Grid" type="Node3D" parent="ConvolutionalLayers/ConvLayer1"]

[node name="Conv1Label" type="CSGBox3D" parent="ConvolutionalLayers/ConvLayer1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0)
material_override = SubResource("StandardMaterial3D_2")
size = Vector3(0.5, 0.5, 0.5)

[node name="ConvLayer2" type="Node3D" parent="ConvolutionalLayers"]

[node name="Conv2Grid" type="Node3D" parent="ConvolutionalLayers/ConvLayer2"]

[node name="Conv2Label" type="CSGBox3D" parent="ConvolutionalLayers/ConvLayer2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0)
material_override = SubResource("StandardMaterial3D_2")
size = Vector3(0.5, 0.5, 0.5)

[node name="PoolingLayers" type="Node3D" parent="."]

[node name="PoolLayer1" type="Node3D" parent="PoolingLayers"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6, 0, 0)

[node name="Pool1Grid" type="Node3D" parent="PoolingLayers/PoolLayer1"]

[node name="Pool1Label" type="CSGBox3D" parent="PoolingLayers/PoolLayer1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0)
material_override = SubResource("StandardMaterial3D_2")
size = Vector3(0.5, 0.5, 0.5)

[node name="FullyConnected" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 12, 0, 0)

[node name="FCNeurons" type="Node3D" parent="FullyConnected"]

[node name="FCLabel" type="CSGBox3D" parent="FullyConnected"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0)
material_override = SubResource("StandardMaterial3D_2")
size = Vector3(0.5, 0.5, 0.5)

[node name="Kernels" type="Node3D" parent="."]

[node name="Kernel1" type="Node3D" parent="Kernels"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -9, 4, 0)

[node name="Kernel1Grid" type="Node3D" parent="Kernels/Kernel1"]

[node name="Kernel1Label" type="CSGBox3D" parent="Kernels/Kernel1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
material_override = SubResource("StandardMaterial3D_3")
size = Vector3(0.5, 0.5, 0.5)

[node name="Kernel2" type="Node3D" parent="Kernels"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3, 4, 0)

[node name="Kernel2Grid" type="Node3D" parent="Kernels/Kernel2"]

[node name="Kernel2Label" type="CSGBox3D" parent="Kernels/Kernel2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
material_override = SubResource("StandardMaterial3D_3")
size = Vector3(0.5, 0.5, 0.5)

[node name="FeatureMaps" type="Node3D" parent="."]

[node name="FeatureMap1" type="Node3D" parent="FeatureMaps"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -9, -4, 0)

[node name="Feature1Grid" type="Node3D" parent="FeatureMaps/FeatureMap1"]

[node name="Feature1Label" type="CSGBox3D" parent="FeatureMaps/FeatureMap1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
material_override = SubResource("StandardMaterial3D_2")
size = Vector3(0.5, 0.5, 0.5)

[node name="FeatureMap2" type="Node3D" parent="FeatureMaps"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3, -4, 0)

[node name="Feature2Grid" type="Node3D" parent="FeatureMaps/FeatureMap2"]

[node name="Feature2Label" type="CSGBox3D" parent="FeatureMaps/FeatureMap2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
material_override = SubResource("StandardMaterial3D_2")
size = Vector3(0.5, 0.5, 0.5)

[node name="DataFlow" type="Node3D" parent="."]

[node name="DataParticles" type="Node3D" parent="DataFlow"]

[node name="TrainingMetrics" type="Node3D" parent="."]

[node name="AccuracyMeter" type="Node3D" parent="TrainingMetrics"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 8, 0)

[node name="AccuracyBase" type="CSGBox3D" parent="TrainingMetrics/AccuracyMeter"]
material_override = SubResource("StandardMaterial3D_1")
size = Vector3(12, 0.2, 1)

[node name="AccuracyIndicator" type="CSGSphere3D" parent="TrainingMetrics/AccuracyMeter"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -6, 0.3, 0)
material_override = SubResource("StandardMaterial3D_2")
radius = 0.3

[node name="Grid" type="Node3D" parent="."]

[node name="GridLines" type="Node3D" parent="Grid"]
